import ROOT
ROOT.gStyle.SetOptStat(0)  
ROOT.gROOT.SetBatch(ROOT.kTRUE)
fn = "background_lowMET.root"
f = ROOT.TFile(fn)
n = "vtx_dBV"
h_3tk_low = f.Get("lowML_3trk/"+n)
h_4tk_low = f.Get("lowML_4trk/"+n)
h_5tk_low = f.Get("lowML_5trk/"+n)
h_3tk_high = f.Get("highML_3trk/"+n)
h_4tk_high = f.Get("highML_4trk/"+n)
h_5tk_high = f.Get("highML_5trk/"+n)
n_3tk_low = h_3tk_low.Integral()
n_4tk_low = h_4tk_low.Integral()
n_5tk_low = h_5tk_low.Integral()
n_3tk_high = h_3tk_high.Integral()
n_4tk_high = h_4tk_high.Integral()
n_5tk_high = h_5tk_high.Integral()
h_4tk_low.Sumw2()
h_3tk_low.Sumw2()
h_3tk_high.Sumw2()
h_4tk_high.Sumw2()
h_4tk_low.Divide(h_3tk_low)
h_3tk_high.Multiply(h_4tk_low)
#h_3tk_high.Scale((1.0*n_4tk_low)/n_3tk_low)
c1 = ROOT.TCanvas("c1","c1",800,800)
h_3tk_high.SetLineColor(ROOT.kRed)

rp = ROOT.TRatioPlot(h_3tk_high,h_4tk_high)
l = ROOT.TLegend(0.65,0.80,0.89,0.92)
l.AddEntry(h_3tk_high,"3 tk highML")
l.AddEntry(h_4tk_high,"4 tk highML")

lines = ROOT.std.vector('double')()
lines.push_back(1)
rp.SetGridlines(lines)
rp.SetH1DrawOpt("e")
rp.SetH2DrawOpt("e")

rp.Draw()
rp.GetLowerRefGraph().SetLineColor(ROOT.kRed)
rp.GetLowerRefGraph().SetMinimum(0)
rp.GetLowerRefGraph().SetMaximum(10)
rp.GetLowerRefYaxis().SetTitle("3trk/4trk")
rp.GetUpperPad().SetLogy()
rp.GetLowYaxis().SetNdivisions(505);
#rp.GetLowerPad().SetLogy()
l.Draw()

c1.Update()
c1.SaveAs("rescaledBV_34trk.png")
